{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h2/Affair.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","styles","wrapper","avatar","src","alt","messageItem","name","wrap","message","time","messageData","Date","toLocaleTimeString","slice","HW1","SuperButton","red","restProps","finalClassName","s","default","Affair","style","d","affair","priority","onClick","deleteAffairCallback","id","button","Affairs","mappedAffairs","data","map","a","_id","setFilter","marginRight","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","el","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","Greeting","setNameCallback","addUser","totalUsers","inputClass","someClass","mainWrapper","errorMessage","GreetingContainer","users","addUserCallback","setName","setError","length","alert","trim","HW3","setUsers","user","v1","SuperCheckbox","onChangeChecked","children","checkbox","check","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.e0a69253.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Message_wrapper__ekyA2\",\"messageItem\":\"Message_messageItem__1vlbt\",\"avatar\":\"Message_avatar__2fzWt\",\"wrap\":\"Message_wrap__2Iggr\",\"name\":\"Message_name__2UpX0\",\"message\":\"Message_message__30lCE\",\"time\":\"Message_time__1jQah\",\"submit\":\"Message_submit__2wpsz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"Greeting_mainWrapper__1P0iB\",\"someClass\":\"Greeting_someClass__ZalI9\",\"error\":\"Greeting_error__2xHqo\",\"errorMessage\":\"Greeting_errorMessage__Hu4dl\",\"wrapper\":\"Greeting_wrapper__1OPUS\",\"totalUsers\":\"Greeting_totalUsers__1a18b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"d\":\"Affair_d__3T51B\",\"button\":\"Affair_button__W_EZg\",\"affair\":\"Affair_affair__2fLC3\",\"priority\":\"Affair_priority__KVL47\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__32E1e\",\"errorInput\":\"SuperInputText_errorInput__2CaQv\",\"error\":\"SuperInputText_error__3wRRT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanClassName\":\"SuperCheckbox_spanClassName__F1Rwt\",\"checkbox\":\"SuperCheckbox_checkbox__1p0nV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2ixBu\",\"red\":\"SuperButton_red__ZIaDJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3pGHW\",\"column\":\"HW4_column__3pZPi\",\"testSpanError\":\"HW4_testSpanError__3S75j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1pum0\"};","import React from 'react'\r\nimport {messageDataPropsType} from './HW1'\r\nimport styles from './Message.module.css'\r\n\r\n\r\nfunction Message(props: messageDataPropsType) {\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.wrapper}>\r\n                <div className={styles.avatar}><img src={props.avatar} alt={'avatar'}/></div>\r\n                <div className={styles.messageItem}>\r\n                    <div className={styles.name}>{props.name}</div>\r\n                    <div className={styles.wrap}>\r\n                        <span className={styles.message}>{props.message}</span>\r\n                        <div className={styles.time}>{props.time}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\n\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Mariko',\r\n    message: 'Saske, and you learn react?',\r\n    time: new Date().toLocaleTimeString().slice(0, -3),\r\n}\r\n\r\n\r\n\r\n\r\nexport type messageDataPropsType = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string\r\n}\r\n\r\n\r\nfunction HW1() {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n           {/* <AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React from 'react'\r\nimport style from './Affair.module.css'\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    id: number\r\n    affair: string\r\n    priority: string\r\n    deleteAffairCallback: (_id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.id)\r\n    }// need to fix\r\n\r\n    return (\r\n        <div className={style.d}>\r\n            <span className={style.affair}>{props.affair}</span>\r\n            <span className={style.priority}>[ {props.priority} ]</span>\r\n            <SuperButton onClick={deleteCallback} className={style.button}>X</SuperButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: ( p: FilterType)=>  void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a.name}\r\n            priority={a.priority}\r\n            id = {a._id}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter('all')} // need to fix\r\n    const setHigh = () => {props.setFilter('high')}\r\n    const setMiddle = () => {props.setFilter('middle')}\r\n    const setLow = () => {props.setFilter('low')}\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <SuperButton onClick={setAll} style ={{marginRight: '10px'}}>All</SuperButton>\r\n            <SuperButton onClick={setHigh} style ={{marginRight: '10px'}}>High</SuperButton>\r\n            <SuperButton onClick={setMiddle} style ={{marginRight: '10px'}}>Middle</SuperButton>\r\n            <SuperButton onClick={setLow}>Low</SuperButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'low' | 'middle' // need to fix any\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: string\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'Anime', priority: 'low'},\r\n    {_id: 3, name: 'Games', priority: 'low'},\r\n    {_id: 4, name: 'Work', priority: 'high'},\r\n    {_id: 5, name: 'HTML & CSS', priority: 'middle'},\r\n    {_id: 6, name: 'Porn', priority: 'high'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n\r\n    if (filter === 'high'){\r\n       return   affairs.filter( affair => affair.priority === filter)\r\n    }\r\n   else if (filter === 'low'){\r\n        return  affairs.filter( affair => affair.priority === filter)\r\n    }\r\n   else if (filter === 'middle'){\r\n        return affairs.filter( affair => affair.priority === filter)\r\n    }\r\n    else  return affairs\r\n\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\r\n\r\n   return  affairs.filter(el => el._id !== _id)\r\n\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n\r\n    const finalInputClassName = `${error ? s.errorInput: s.superInput} ${className}`// need to fix with (?:) and s.superInput=\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ChangeEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error !== '' ? s.error : s.someClass // need to fix with (?:)\r\n\r\n    return (\r\n        <div className={s.mainWrapper}>\r\n            <div className={s.wrapper}>\r\n                <SuperInputText value={name} onChange={setNameCallback} className={inputClass}/>\r\n                <span className={s.errorMessage}>{error}</span></div>\r\n            <SuperButton onClick={addUser}>add</SuperButton>\r\n            <span className={s.totalUsers}>{totalUsers}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void// need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    let [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.currentTarget.value === '') {\r\n            error = 'name is required'\r\n            setError(error)\r\n        }\r\n        setName(e.currentTarget.value)\r\n        setError('')\r\n\r\n    }\r\n    const addUser = () => {\r\n        if (name !== '') {\r\n            alert(`Hello ${name}!`)\r\n            addUserCallback(name.trim())\r\n            setName('')\r\n        } else {\r\n            error = 'name is required'\r\n            setError(error)\r\n        }// need to fix\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => {\r\n        let user = {\r\n            _id: v1(),\r\n            name: name\r\n        }// need to fix any\r\n        setUsers([user, ...users]) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        let check = e.currentTarget.checked\r\n        if (onChangeChecked) {\r\n            onChangeChecked(check)\r\n        }\r\n        if (onChange) {\r\n            onChange(e)\r\n        }\r\n\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label className={s.checkbox}>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'This field is required'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    //spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, работает ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}>\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from '../../../p2-homeworks/h2/HW2'\r\nimport HW3 from '../../../p2-homeworks/h3/HW3'\r\nimport HW4 from '../../../p2-homeworks/h4/HW4'\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}